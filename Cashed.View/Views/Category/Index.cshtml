@model Cashed.View.Models.CategoryListViewModel
@{
    ViewBag.Title = "Категории";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<button class="showcheckboxes btn btn-outline-secondary btn-sm">Выбрать</button>
<button class="hidecheckboxes btn btn-outline-secondary btn-sm" hidden>Убрать выделение</button>
<button type="button" class="delete-button btn btn-outline-danger btn-sm" data-toggle="modal" data-target="#deleteModal" hidden>
    Удалить
</button>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th class="checkbox-cell" hidden>
                <input type="checkbox" class="toggle-all-chechboxes"/>
            </th>
            <th>
                Номер
            </th>
            <th>
                Название
            </th>
            <th>
                Продуктов
            </th>
        </tr>
    </thead>
    <tbody id="cat-table-body">
        
    @for (int i = 0; i < Model.List.List.Count; i++)
    {
        <tr data-id="@Model.List.List[i].Id">
            <td class="checkbox-cell" hidden>
                <input type="checkbox" class="item-checkbox" data-id="@Model.List.List[i].Id"/>
            </td>
            <td>@Model.List.List[i].Id</td>
            <td>
                @Html.ActionLink(Model.List.List[i].Name, "Edit", new {id = Model.List.List[i].Id}, new {@class = "edit-item-link"})
            </td>
            <td>
                @Html.ActionLink(Model.List.List[i].ProductCount.ToString(), "Index", "Products",
                    new {categoryName = Model.List.List[i].Name}, new {@class = "edit-item-link"})
            </td>
        </tr>
    }

    </tbody>
</table>

<!-- Pagination -->
@Html.Partial("_Pagination", Model.List.Pagination)

<!-- Adding category -->
@using (Html.BeginForm("Add", "Category"))
{
    @Html.ValidationSummary()

    <div class="container">
        <div class="row">
            <div class="form-group row">
                <label class="col-form-label col-md-4" for="Category">Название категории</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Category, new { @class = "form-control" })
                </div>
                <div class="col-md-2">
                    <button id="add-cat-btn" type="submit" class="btn btn-primary">Добавить</button>
                </div>
            </div>
        </div>
    </div>
}
<!-- Deletion modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Удаление категорий</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Удалить помеченные категорией с сохранением операций по ним и их продуктов?
                Или удалить их полностью. Тогда продукты и операции будут удалены также.
            </div>
            <div class="modal-footer">
                <button id="deleteOnlyMarkButton" type="button" class="btn btn-primary" data-dismiss="modal">Удалить с сохранением</button>
                <button id="deleteFullButton" type="button" class="btn btn-danger" data-dismiss="modal">Удалить полностью</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        activateLink("#categoriesLink");

        var checkboxedTable = new CheckboxedTable(categoryCheckboxChanged);

        $(".item-checkbox").change(categoryCheckboxChanged);
        $("#deleteOnlyMarkButton").click(function() { deleteCategories(true); });
        $("#deleteFullButton").click(function() { deleteCategories(false); });

        function categoryCheckboxChanged() {
            if (checkboxedTable.getSelectedCount() > 0)
                $(".delete-button").removeAttr("hidden");
            else
                $(".delete-button").attr("hidden", "hidden");
        }

        function deleteCategories(onlyMark) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Delete", "Category")',
                contentType: "application/json; charset=utf-8",
                data: { idList: JSON.stringify(getDeleteIdList()), onlyMark: onlyMark },
                dataType: "json",
                success: function (data) {
                    location.reload();
                    //deleteRows(data);
                },
                error: function() { alert('Server failure!'); }
            });
        }

        function getDeleteIdList() {
            var chk = checkboxedTable.getSelectedCheckboxes();
            var ids = chk.map(function(index, item) {
                return +$(item).attr("data-id");
            });
            var idList = [];
            for (var i = 0; i < ids.length; i++) {
                idList[i] = +ids[i];
            }
            return idList;
        }

    </script>

}


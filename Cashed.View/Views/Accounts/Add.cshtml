@model Cashed.View.Models.EditAccountViewModel

@{
    ViewBag.Title = "Новый счет";
}

<div class="centered-form">
    <h3>Новый счет</h3>
    <br />
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(x => x.Id);

        <div class="form-group row">
            @Html.LabelFor(m => m.Name, null, new { @class = "col-form-label col-md-3" })
            @Html.TextBoxFor(m => m.Name, null, new { @class = "form-control col-md-9" })
        </div>
        <div class="container validation-message-in-container">
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-9 zero-paddings">
                    @Html.ValidationMessageFor(m => m.Name, null)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Balance, null, new { @class = "col-form-label col-md-3" })
            @Html.TextBoxFor(m => m.Balance, null, new { @class = "form-control col-md-9", autocomplete="off" })
        </div>
        <div class="container validation-message-in-container">
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-9 zero-paddings">
                    @Html.ValidationMessageFor(m => m.Balance, null)
                </div>
            </div>
        </div>

        <div class="bottom-buttons-row">
            <button type="submit" class="btn btn-outline-primary cursor-pointer">Сохранить</button>
            @Html.ActionLink("Отмена", "Index", "Accounts", null, new { @class = "btn btn-outline-danger" })
        </div>
    }
</div>

@section Scripts{
    <script type="text/javascript">
        activateLink("#accountsLink");
        makeInputNumeric("Balance", true);
    </script>
}
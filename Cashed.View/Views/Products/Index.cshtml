@model Cashed.View.Models.ProductListViewModel
@{
    ViewBag.Title = "Продукты";
}

<div id="select-cat-msg" class="validation-summary-errors validation-string no-items-message">
    Выберите категорию из списка!
</div>

<div class="container">
    <div class="row">
        <div class="form-group row">
            <label class="col-form-label col-md-3" for="Category">Категория</label>
            <input id="Category" type="text" class="form-control" list="categoryList"/>
            <div class="col-md-2">
                <span class="input-icon input-group-addon" id="search-button">
                    <i class="fa fa-search"></i>
                </span>
            </div>
            <datalist id="categoryList">
                @foreach (var category in Model.Categories)
                {
                    <option>@category.Name</option>
                }
            </datalist>
        </div>
    </div>
</div>
<br/>

<div id="products-table" hidden>
    <button class="showcheckboxes btn btn-outline-secondary btn-sm" hidden>Выбрать</button>
    <button class="hidecheckboxes btn btn-outline-secondary btn-sm" hidden>Убрать выделение</button>
    <button class="delete-button btn btn-outline-danger btn-sm" hidden>Удалить</button>

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th class="checkbox-cell" hidden>
                <input type="checkbox" class="toggle-all-chechboxes" />
            </th>
            <th>
                Номер
            </th>
            <th>
                Название
            </th>
        </tr>
        </thead>
        <tbody id="Products">
        </tbody>
    </table>

    <div id="enter-prod-name" class="validation-summary-errors validation-string no-items-message" hidden="hidden">
        Введите название продукта!
    </div>

    <div id="product-exists" class="validation-summary-errors validation-string no-items-message" hidden="hidden">
        Такой продукт в такой категории уже есть!
    </div>

    <div class="container">
        <div class="row">
            <div class="form-group row">
                <label class="col-form-label col-md-4" for="Product">Название продукта</label>
                <div class="col-md-6">
                    <input id="Product" type="text" class="form-control"/>
                </div>
                <div class="col-md-2">
                    <button id="add-product-btn" class="btn btn-primary">Добавить</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        activateLink("#productsLink");

        makeInputAutocomplete("Category", null, categorySelected, "col-md-7");

        function categorySelected() {
            $("#select-cat-msg").attr("hidden", "hidden");
            $("#products-table").removeAttr("hidden");
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetProducts", "Products")',
                contentType: "application/json; charset=utf-8",
                data: { categoryName: $("#Category").val() },
                dataType: "json",
                success: function (data) {
                    updateProducts(data);
                },
                error: function() { alert('Server failure!'); }
            });
        }

        function updateProducts(products) {
            var table = $("#Products");
            table.empty();
            for (var i = 0; i < products.length; i++) {
                addProductToTable(table, products[i]);
            }
            updateShowcheboxesVisibility();
        }

        function addProductToTable(table, product) {
            $('<tr>').addClass("data-row")
                .attr("data-id", product.Id)
                .append($("<td>").addClass("checkbox-cell").attr("hidden", "hidden")
                    .append($("<input>").attr("type", "checkbox").addClass("product-checkbox")
                        .attr("data-id", product.Id).change(productsCheckboxChanged)))
                .append($('<td>').html(
                    product.Id
                ))
                .append($('<td>').html(
                    product.Name
                ))
                .appendTo(table);
        }

        $("#add-product-btn").click(function() {
            if (!$("#Category").val()) {
                $("#select-cat-msg").removeAttr("hidden");
            }
            var prodName = $("#Product").val();
            if (!prodName) {
                $("#enter-prod-name").removeAttr("hidden");
            } else {
                $("#enter-prod-name").attr("hidden", "hidden");
                addProduct(prodName);
            }
        });

        function addProduct(productName) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("AddProduct", "Products")',
                contentType: "application/json; charset=utf-8",
                data: { categoryName: $("#Category").val(), productName: productName },
                dataType: "json",
                success: function(data) {
                    if (data.Status) {
                        $("#product-exists").attr("hidden", "hidden");
                        addProductToTable($("#Products"), data.Model);
                        $("#Product").val("");
                        updateShowcheboxesVisibility();
                    } else {
                        $("#product-exists").removeAttr("hidden");
                        $("#product-exists").html(data.Message);
                    }
                },
                error: function() { alert('Server failure!'); }
            });
        }

        $(".showcheckboxes").click(showCheckboxes);
        $(".hidecheckboxes").click(hideCheckboxes);
        $(".toggle-all-chechboxes").change(toggleAllCheckboxes);
        $(".delete-button").click(deleteProducts);

        function showCheckboxes() {
            $(".checkbox-cell").removeAttr("hidden");
            $(".hidecheckboxes").removeAttr("hidden");
            $(".showcheckboxes").attr("hidden", "hidden");
        }

        function hideCheckboxes() {
            $("input[type=checkbox]").prop("checked", false);
            productsCheckboxChanged();
            $(".checkbox-cell").attr("hidden", "hidden");
            $(".showcheckboxes").removeAttr("hidden");
            $(".hidecheckboxes").attr("hidden", "hidden");
        }

        function toggleAllCheckboxes() {
            if ($(".toggle-all-chechboxes:checked").length) {
                $(".product-checkbox").prop("checked", true);
            } else {
                $(".product-checkbox").prop("checked", false);
            }
            productsCheckboxChanged();
        }

        function productsCheckboxChanged() {
            if ($(".product-checkbox:checked").length)
                $(".delete-button").removeAttr("hidden");
            else
                $(".delete-button").attr("hidden", "hidden");
        }

        function updateShowcheboxesVisibility() {
            if ($(".data-row").length) {
                $(".showcheckboxes").removeAttr("hidden");
            } else {
                hideCheckboxes();
                $(".showcheckboxes").attr("hidden", "hidden");
            }
        }

        function deleteProducts() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Delete", "Products")',
                contentType: "application/json; charset=utf-8",
                data: { idList: JSON.stringify(getDeleteIdList()) },
                dataType: "json",
                success: function (data) {
                    deleteRows(data);
                },
                error: function () { alert('Failure'); }
            });
        }

        function getDeleteIdList() {
            var chk = $(".product-checkbox:checked");
            var ids = chk.map(function (index, item) {
                return +$(item).attr("data-id");
            });
            var idList = [];
            for (var i = 0; i < ids.length; i++) {
                idList[i] = +ids[i];
            }
            return idList;
        }

        function deleteRows(ids) {
            for (var i = 0; i < ids.length; i++) {
                var tr = $("tr[data-id=" + ids[i] + "]");
                console.log(tr);
                tr.remove();
            }
            productsCheckboxChanged();
            updateShowcheboxesVisibility();
        }

    </script>
}


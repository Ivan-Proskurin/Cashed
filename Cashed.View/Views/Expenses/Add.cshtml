@model Cashed.View.Models.ExpenseItemViewModel
@{
    ViewBag.Title = "Операции с расходами";
}

@if (Model.Id == -1)
{
    <h3 class="form-caption-bg">Новый счет</h3>
}
else
{
    <h3 class="form-caption-bg">Редактирование счета</h3>
}
@Html.ValidationSummary(true)
@if (Model.NoItems)
{
    <div class="validation-summary-errors no-items-message validation-string">
        Добавьте хотя бы одну покупку, чтобы создать чек!
    </div>
}
<div class="container">
    <div class="row">
        <div class="col">
            @using (Html.BeginForm())
            {
                @Html.HiddenFor(x => x.Id)

                <div class="container">
                    <div class="row">
                        <div class="column-header-col col col-sm-8">
                            <h5 class="form-caption">Ввод:</h5>
                        </div>
                        <div class="col col-sm-4">
                            <button type="submit" class="btn btn-primary btn-sm">Добавить в чек</button>
                        </div>
                    </div>
                </div>               
                <div class="form-group row">
                    <label class="col-form-label col-md-3" for="datepicker">Дата/время*</label>
                    <div id='datepicker' class='input-group date col-md-9' >
                        @Html.TextBoxFor(m => m.DateTime, new { @class = "form-control", autocomplete="off" })
                        <span class="input-group-addon" id="date-picker-button">
                            <i class="fa fa-calendar"></i>
                        </span>
                    </div>
                    <div class="container">
                        <div class="row">
                            <div class="col-md-3"></div>
                            <div class="col-md-9">
                                @Html.ValidationMessageFor(m => m.DateTime)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="Category" class="col-form-label col-md-3">Категория*</label>
                    @Html.TextBoxFor(m => m.Category, new { @class = "form-control", list = "categoryList" })
                    @Html.ValidationMessageFor(m => m.Category)
                    <datalist id="categoryList">
                        @foreach (var category in Model.AvailCategories)
                        {
                            <option>@category</option>
                        }
                    </datalist>
                </div>
                <div class="form-group row">
                    <label for="Product" class="col-form-label col-md-3">Продукт*</label>
                    @Html.TextBoxFor(m => m.Product, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product)
                </div>
                <div class="form-group row">
                    <label for="Price" class="col-form-label col-md-3">Сумма*</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Price)
                    </div>
                    <label for="Quantity" class="col-form-label col-md-3">Количество</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group row">
                    <label for="Comment" class="col-form-label col-md-3">Комментарий</label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.Comment, new { @class = "form-control" })
                    </div>
                </div>
            }
        </div>
        <div class="col">
            <div class="container">
                <div class="row">
                    <div class="column-header-col col col-sm-9">
                        <h5 class="form-caption">Итог:</h5>
                    </div>
                    <div class="col col-sm-3">
                        @Html.ActionLink("Подтвердить", "CommitBill", null, new { @class = "btn btn-danger btn-sm" })
                    </div>
                </div>
            </div>
            @Html.Action("GetSubtotal")
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function() {

            makeInputDatetimePicker("DateTime");

        });

        makeInputAutocomplete("Category",
            null,
            function() {
                updateProducts($("#Category").val());
            });
        var productsAutocomplete = makeInputAutocomplete("Product", []);

        makeInputNumeric("Price");
        makeInputNumeric("Quantity");

        var product = "@Model.Product";

        function updateProducts(category) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCategoryProducts", "Expenses")',
                contentType: "application/json; charset=utf-8",
                data: { category: category },
                dataType: "json",
                success: function(data) {
                    if (product.Length == 0)
                        $("#Product").val("");
                    productsAutocomplete.destroy();
                    productsAutocomplete = makeInputAutocomplete("Product", data);
                },
                error: function() { alert('Server failure!'); }
            });
        }

        var categoryVal = $("#Category").val();
        if (categoryVal.length > 0) {
            updateProducts(categoryVal);
        }
    </script>
}

